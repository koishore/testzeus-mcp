name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio
          
      - name: Run Python tests
        run: |
          python -m pytest tests/ -v --tb=short
          
      - name: Test MCP server startup
        run: |
          # Start server in background and test it starts
          python src/main.py &
          SERVER_PID=$!
          sleep 3
          # Kill the server
          kill $SERVER_PID || true
          
      - name: Run demo script
        run: |
          python demo_script.py

  vscode-extension:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install VSCode extension dependencies
        working-directory: vscode-extension
        run: |
          npm install
          npm install -g @vscode/vsce
          
      - name: Compile TypeScript
        working-directory: vscode-extension
        run: |
          npm run compile
          
      - name: Lint code
        working-directory: vscode-extension
        run: |
          npm run lint || echo "Linting failed but continuing..."
          
      - name: Package extension
        working-directory: vscode-extension
        run: |
          vsce package --no-yarn

  integration:
    runs-on: ubuntu-latest
    needs: [test, vscode-extension]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Start MCP server in background
        run: |
          python src/main.py &
          echo $! > server.pid
          sleep 5
          
      - name: Test server is running
        run: |
          # Test that server process is running
          if ps -p $(cat server.pid) > /dev/null; then
            echo "Server is running"
          else
            echo "Server failed to start"
            exit 1
          fi
          
      - name: Cleanup
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi